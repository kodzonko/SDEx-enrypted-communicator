
[tool.poetry]
name = "sdex-server"
version = "0.1.0"
description = "Backend for SDEx encrypted communicator. Connects with clients using websockets."
authors = ["Jan Wadolowski <189539@edu.p.lodz.pl>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.92.0"
uvicorn = { extras = ["standard"], version = "^0.23.2" }
pydantic = "^1.10.5"
python-dotenv = "^0.21.1"
loguru = "^0.6.0"
fastapi-socketio = "^0.0.10"
bidict = "^0.22.1"

[tool.poetry.group.dev.dependencies]
mockito = "^1.4.0"
mypy = "^1.0.1"
bandit = "^1.7.4"
black = "^23.1.0"
isort = "^5.12.0"
autoflake = "^2.0.1"
pytest = "^7.2.1"
pydocstyle = "^6.3.0"
httpx = "^0.23.3"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"
freezegun = "^1.2.2"
ruff = "^0.0.269"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.ruff]
ignore-init-module-imports = true
line-length = 88
fix = true
src = ["src", "tests"]
target-version = "py310"
task-tags = ["TODO"]
ignore = ["D100", "D107"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pycodestyle]
max-doc-length = 88

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.pytest]
asyncio_mode = "auto"
